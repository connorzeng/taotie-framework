spring.application.name=orderApp

dubbo.registry.address=zookeeper://192.168.31.18:2181
dubbo.registry.timeout=100000
dubbo.protocol.name=dubbo
dubbo.protocol.port=25585
dubbo.scan.base-packages=com.connor.taotie.provider


##mybatis.mapper-locations=classpath:mapper/*.xml
## ����mybatis plus
#mybatis-plus.config-location=classpath:mapper/*.xml
mybatis-plus.mapper-locations=classpath:mapper/*.xml


spring.shardingsphere.datasource.names=ds0,ds1,ds2,ds3

spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://192.168.31.18:3306/shardingdb0
spring.shardingsphere.datasource.ds0.username=shardinguser0
spring.shardingsphere.datasource.ds0.password=1234

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://192.168.31.18:3306/shardingdb1
spring.shardingsphere.datasource.ds1.username=shardinguser1
spring.shardingsphere.datasource.ds1.password=1234

spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://192.168.31.18:3306/shardingdb2
spring.shardingsphere.datasource.ds2.username=shardinguser2
spring.shardingsphere.datasource.ds2.password=1234

spring.shardingsphere.datasource.ds3.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds3.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds3.url=jdbc:mysql://192.168.31.18:3306/shardingdb3
spring.shardingsphere.datasource.ds3.username=shardinguser3
spring.shardingsphere.datasource.ds3.password=1234

## �����Ƭ����
## �������Ƭ,ֱ��д��data-node->ds0.users
spring.shardingsphere.sharding.tables.users.actual-data-nodes=ds0.users

## mch��,����pid�ֿ�,�����зֱ�,���Բ���Ҫ����table-strategy
spring.shardingsphere.sharding.tables.mch.actual-data-nodes=ds$->{0..3}.mch
spring.shardingsphere.sharding.tables.mch.key-generator.column=id
spring.shardingsphere.sharding.tables.mch.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.mch_user_auth.actual-data-nodes=ds$->{0..3}.mch_user_auth
spring.shardingsphere.sharding.tables.mch_user_auth.key-generator.column=id
spring.shardingsphere.sharding.tables.mch_user_auth.key-generator.type=SNOWFLAKE
## ���ð󶨱�
spring.shardingsphere.sharding.binding-tables=mch,mch_user_auth

## �ֿ����-�б��ʽ
##spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=pid
##spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{pid % 4}
## �ֿ����-ȡģ��Ƭ
spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=pid
spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.connor.taotie.provider.sharding.ModShardingAlgorithm


##
spring.shardingsphere.props.sql.show=true


